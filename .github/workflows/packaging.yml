# Copyright 2021-2023 Jetperch LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# GitHub actions
# See documentation: https://docs.github.com/en/actions
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
# CMake example: https://github.com/Mizux/cmake-cpp/blob/main/.github/workflows/amd64_windows.yml


name: Packaging

on:
  - push

jobs:

  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: ["3.9", "3.10", "3.11"]
        os: ["ubuntu-latest", "windows-2019", "macos-13", "macos-12"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Build on Windows
        if: ${{ startsWith(matrix.os, "windows") }}
        run: |
          cmake -S . -B cmake_build -G "Visual Studio 17 2022" -DCMAKE_CONFIGURATION_TYPES=Release
          cmake --build cmake_build --config Release --target ALL_BUILD
          cmake --build cmake_build --config Release --target RUN_TESTS

      - name: Build on POSIX
        if: ${{ !startsWith(matrix.os, "windows") }}
        run: |
          cmake -S . -B cmake_build -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release
          cmake --build cmake_build
          cmake --build cmake_build --target test

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build wheel

      - name: Build python wheel
        run: python -m build

      - name: Install the wheel
        run: python -m pip install -f dist pyjls

      - name: Run python unit tests
        run: python3 -m unittest
        working-directory: pyjls

      - name: Upload python source package
        if: ${{ matrix.os }} == "ubuntu-latest" && ${{ matrix.python }} == "3.11"
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

      - name: Upload python wheel
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.whl
